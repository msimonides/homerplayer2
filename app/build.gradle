plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    alias(libs.plugins.compose.compiler)
    alias(libs.plugins.ksp)
    alias(libs.plugins.kotlin.serialization)
    alias(libs.plugins.aboutlibraries)
    alias(libs.plugins.room)
    alias(libs.plugins.sentry)
}

def enableComposeMetrics = project.hasProperty("enableComposeMetrics") ? project["enableComposeMetrics"] : false

android {
    namespace 'com.studio4plus.homerplayer2'
    compileSdk libs.versions.android.compileSdk.get().toInteger()

    defaultConfig {
        applicationId "com.studio4plus.homerplayer2"
        minSdk libs.versions.android.minSdk.get().toInteger()
        targetSdk 34
        versionCode 18
        versionName "1.3.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testOptions {
            unitTests {
                includeAndroidResources = true
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        coreLibraryDesugaringEnabled true
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
        buildConfig true
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    applicationVariants.configureEach { variant ->
        kotlin.sourceSets {
            getByName(name) { kotlin.srcDir("build/generated/ksp/${variant.name}/kotlin") }
        }
    }
}

room {
    schemaDirectory "$projectDir/schemas"
}

sentry {
    tracingInstrumentation {
        enabled = false
        logcat {
            enabled = false
        }
    }
    autoInstallation {
        enabled = false
    }

    ignoredBuildTypes = ["debug"]
}

dependencies {
    implementation project(':base')

    coreLibraryDesugaring libs.desugarjdk

    ksp libs.androidx.room.compiler
    ksp libs.koin.compiler

    implementation libs.aboutlibraries.compose
    implementation libs.androidx.activity.compose
    implementation libs.androidx.core.ktx
    implementation libs.androidx.datastore.core
    implementation libs.androidx.documentfile
    implementation libs.androidx.lifecycle.runtime.compose
    implementation libs.androidx.lifecycle.service
    implementation libs.androidx.lifecycle.viewmodel
    implementation libs.androidx.media3.exoplayer
    implementation libs.androidx.media3.session
    implementation libs.androidx.navigation.compose
    implementation libs.androidx.room.ktx
    implementation libs.androidx.workmanager.ktx
    implementation libs.compose.ui.ui
    implementation libs.compose.ui.tooling.preview
    implementation libs.compose.material.icons.extended
    implementation libs.compose.material3
    implementation libs.coil.compose
    implementation libs.coil.okhttp
    implementation libs.koin.android
    implementation libs.koin.androidx.compose
    implementation libs.koin.annotations
    implementation libs.kotlinx.coroutines.android
    implementation libs.kotlinx.coroutines.guava // For WorkManager.
    implementation libs.kotlinx.serialization.json
    implementation libs.ktor.okhttp // For configuring podcastindex.
    implementation libs.okhttp
    implementation libs.okhttp.tls
    implementation libs.podcastindex
    implementation libs.rssparser
    implementation libs.sentry.android
    implementation libs.timber
    implementation libs.treessence

    testImplementation libs.androidx.test.corektx
    testImplementation libs.junit
    testImplementation libs.kotlinx.coroutines.test
    testImplementation libs.robolectric
    testImplementation libs.turbine

    androidTestImplementation libs.androidx.test.espresso.core
    androidTestImplementation libs.androidx.test.junit
    androidTestImplementation libs.compose.ui.test.junit

    debugImplementation libs.compose.ui.tooling
    debugImplementation libs.compose.ui.test.manifest
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    if (enableComposeMetrics) {
        def outputDir = project.layout.buildDirectory.dir("compose").get()
        compilerOptions.freeCompilerArgs.addAll(
                "-P",
                "plugin:androidx.compose.compiler.plugins.kotlin:metricsDestination=${outputDir}",
                "-P",
                "plugin:androidx.compose.compiler.plugins.kotlin:reportsDestination=${outputDir}",
        )
    }
}